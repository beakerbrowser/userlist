<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css'>
    <link rel='stylesheet' href='/stylesheets/fontawesome.min.css'>
  </head>
  <body>
    <main>
      <div class="feed">
        <h3>Newest users</h3>
        <%
          var newUsers = users.slice()
          newUsers.sort((a, b) => b.createdAt.localeCompare(a.createdAt))
          for (let user of newUsers.slice(0, 10)) {
        %>
          <div class="user">
            <div class="id">
              <a href="<%= user.driveUrl %>" title="@<%= user.title %>"><%= user.title %></a>
            </div>
            <div class="details"><%= user.description %></div>
          </div>
        <% } %>
      </div>
      <div class="directory">
        <% if (myRecord) { %>
          <span class="actions">
            <button class="cta set-profile"><span class="fas fa-fw fa-pencil-alt"></span> Update Your Listing</button>
            <button class="remove-profile">Remove</button>
          </span>
        <% } else { %>
          <span class="actions">
            <button class="cta set-profile"><span class="fas fa-fw fa-plus"></span> Add Your Profile</button>
          </span>
        <% } %>
        <h1><%= title %></h1>
        <h3><%= users.length %> users registered</h3>
        <form method="post" action="/">
          <input type="hidden" name="driveUrl" value="<%= (form ? form.driveUrl : user.driveUrl) || '' %>">
          <input type="hidden" name="title" value="<%= (form ? form.title : user.title) || '' %>">
          <input type="hidden" name="description" value="<%= (form ? form.description : user.description) || '' %>">
        </form>
        <% if (myRecord) { %>
          <p>You're listed as <a href="<%= myRecord.driveUrl %>" title="@<%= myRecord.title %>"><%= myRecord.title %></a>.</p>
        <% } %>
        <% if (message) { %>
          <div class="message <%= message.type %>"><%= message.text %></div>
        <% } %>
        <input class="search" type="text" placeholder="Search the directory">
        <div class="users mainlist">
          <% for (let user of users) { %>
            <div class="user">
              <div class="id">
                <a href="<%= user.driveUrl %>" title="@<%= user.title %>"><%= user.title %></a>
                <small class="peer-count" data-peer-count="<%= user.peerCount %>">
                  <span class="fas fa-fw fa-share-alt"></span>
                  <%= user.peerCount %>
                  hosting
                </small>
              </div>
              <% if (user.description) { %>
                <div class="details"><%= user.description %></div>
              <% } %>
              <div>
                <button class="add-contact" data-url="<%= user.driveUrl %>">Add to Address Book</button>
              </div>
            </div>
          <% } %>
        </div>
      </div>
      <div class="beta-notice">
        <div class="beta-notice-inner">
          <h3>Help</h3>
          <p>If you need help changing or removing your listing, email us at support@beakerbrowser.com</p>
        </div>
      </div>
    </main>
  </body>
  <script type="text/javascript">
  document.querySelector('.search').addEventListener('keyup', function (e) {
    var query = (e.currentTarget.value || '').trim().toLowerCase()
    for (let user of Array.from(document.querySelectorAll('.mainlist .user'))) {
      if (user.textContent.toLowerCase().includes(query)) {
        user.classList.remove('hidden')
      } else {
        user.classList.add('hidden')
      }
    }
  })
  try {
    Array.from(document.querySelectorAll('.set-profile'), el => el.addEventListener('click', async function (e) {
      e.preventDefault()
      var form = document.querySelector('form')
      var profile = await beaker.contacts.requestProfile()
      form.querySelector('input[name="driveUrl"]').value = profile.url
      form.querySelector('input[name="title"]').value = profile.title
      form.querySelector('input[name="description"]').value = profile.description
      form.submit()
    }))
    document.querySelector('.remove-profile').addEventListener('click', function (e) {
      e.preventDefault()
      var xhr = new XMLHttpRequest();
      xhr.open('DELETE', "/", true);
      xhr.onreadystatechange = function() {
        if (this.readyState == 4) {
          alert(this.responseText);
          location.reload()
        };//end onreadystate
      }
      xhr.send();
    })
  } catch (e){}
  document.querySelector('.users').addEventListener('click', function (e) {
    if (e.target.classList.contains('add-contact')) {
      beaker.contacts.requestAddContact(e.target.dataset.url)
    }
  })

  if (typeof window.beaker === 'object') {
    beaker.terminal.registerCommand({
      name: 'admin-list',
      help: 'admin-list {password} {driveUrl}',
      async handle (opts = {}, password, driveUrl) {
        return JSON.stringify(await (await fetch('/admin-list', {
          method: 'POST',
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify(Object.assign(opts, {password, driveUrl}))
        })).json(), null, 2)
      }
    })
    beaker.terminal.registerCommand({
      name: 'admin-update',
      help: 'admin-update {password} {idtoken} [-t title] [-d description] [-u drive url]',
      options: [
        {name: 'title', abbr: 't', help: 'Title to set'},
        {name: 'description', abbr: 'd', help: 'Description to set'},
        {name: 'driveUrl', abbr: 'u', help: 'URL to set'}
      ],
      async handle (opts = {}, password, idtoken) {
        return (await fetch('/admin-update', {
          method: 'POST',
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify(Object.assign(opts, {password, idtoken}))
        })).text()
      }
    })
    beaker.terminal.registerCommand({
      name: 'admin-delete',
      help: 'admin-delete {password} {idtoken}',
      async handle (opts = {}, password, idtoken) {
        return (await fetch('/admin-delete', {
          method: 'POST',
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify({password, idtoken})
        })).text()
      }
    })
  }
  </script>
</html>
